
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5C30E65AA799CA5F7529C9A1BFCD1C3F'
    
_lr_action_items = {'SUBASSIGN':([2,4,8,9,10,11,12,22,37,48,50,51,98,101,114,115,116,117,127,],[31,-30,-31,-34,-29,-32,-37,-28,70,-36,-39,-38,-33,-60,-43,-40,-41,-42,-35,]),'DOTDIV':([4,8,9,10,11,12,22,37,39,48,50,51,98,101,114,115,116,117,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,79,-36,-39,-38,-33,-60,-43,-40,-41,-42,79,79,79,79,-35,]),'ONES':([6,13,21,31,32,33,34,35,36,47,59,83,89,90,100,102,103,137,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'RETURN':([0,3,4,7,8,9,10,11,12,16,17,18,22,24,25,28,29,30,37,38,39,41,45,46,48,50,51,52,53,60,61,62,63,91,98,99,101,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,138,139,140,141,142,],[1,-6,-30,-7,-31,-34,-29,-32,-37,-11,1,-10,-28,-8,-5,-9,1,-27,-39,-53,-44,-51,-49,-55,-36,-39,-38,-4,1,-25,-26,1,-19,-21,-33,-24,-60,-20,-14,-16,-15,-13,-12,1,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,1,-22,1,-59,-58,-57,-17,-5,-66,1,-18,]),'FLOATNUM':([0,3,4,6,7,8,9,10,11,12,13,14,16,17,18,21,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,50,51,52,53,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,],[4,-6,-30,4,-7,-31,-34,-29,-32,-37,4,4,-11,4,-10,4,-28,-8,-5,-9,4,-27,4,4,4,4,4,4,-39,-53,-44,-51,-49,-55,4,-36,-39,-38,-4,4,4,-25,-26,4,-19,-69,-71,-70,-68,4,-67,-76,4,-77,4,4,4,4,4,-74,-75,-72,-73,4,4,4,-21,4,4,4,4,4,-33,-24,4,-60,4,4,-20,-14,-16,-15,-13,-12,4,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,4,-22,4,-59,-58,-57,4,-17,-5,-66,4,-18,]),'NE':([4,8,9,10,11,12,22,37,38,39,41,45,48,50,51,98,101,113,114,115,116,117,119,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,78,-44,-51,-49,-36,-39,-38,-33,-60,-52,-43,-40,-41,-42,-50,-45,-46,-48,-47,-35,]),'DOTADD':([4,8,9,10,11,12,22,37,39,45,48,50,51,98,101,114,115,116,117,119,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,-44,96,-36,-39,-38,-33,-60,-43,-40,-41,-42,96,-45,-46,-48,-47,-35,]),'WHILE':([0,3,4,7,8,9,10,11,12,16,17,18,22,24,25,28,29,30,37,38,39,41,45,46,48,50,51,52,53,60,61,62,63,91,98,99,101,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,138,139,140,141,142,],[5,-6,-30,-7,-31,-34,-29,-32,-37,-11,5,-10,-28,-8,-5,-9,5,-27,-39,-53,-44,-51,-49,-55,-36,-39,-38,-4,5,-25,-26,5,-19,-21,-33,-24,-60,-20,-14,-16,-15,-13,-12,5,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,5,-22,5,-59,-58,-57,-17,-5,-66,5,-18,]),'PRINT':([0,3,4,7,8,9,10,11,12,16,17,18,22,24,25,28,29,30,37,38,39,41,45,46,48,50,51,52,53,60,61,62,63,91,98,99,101,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,138,139,140,141,142,],[6,-6,-30,-7,-31,-34,-29,-32,-37,-11,6,-10,-28,-8,-5,-9,6,-27,-39,-53,-44,-51,-49,-55,-36,-39,-38,-4,6,-25,-26,6,-19,-21,-33,-24,-60,-20,-14,-16,-15,-13,-12,6,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,6,-22,6,-59,-58,-57,-17,-5,-66,6,-18,]),'DOTMUL':([4,8,9,10,11,12,22,37,39,48,50,51,98,101,114,115,116,117,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,82,-36,-39,-38,-33,-60,-43,-40,-41,-42,82,82,82,82,-35,]),'INTNUM':([0,3,4,6,7,8,9,10,11,12,13,14,16,17,18,21,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,50,51,52,53,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,],[10,-6,-30,10,-7,-31,-34,-29,-32,-37,10,10,-11,10,-10,10,-28,-8,-5,-9,10,-27,10,10,10,10,10,10,-39,-53,-44,-51,-49,-55,10,-36,-39,-38,-4,10,10,-25,-26,10,-19,-69,-71,-70,-68,10,-67,-76,10,-77,10,10,10,10,10,-74,-75,-72,-73,10,10,10,-21,10,10,10,10,10,-33,-24,10,-60,10,10,-20,-14,-16,-15,-13,-12,10,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,10,-22,10,-59,-58,-57,10,-17,-5,-66,10,-18,]),')':([4,8,9,10,11,12,22,37,38,39,41,45,46,48,49,50,51,69,98,101,104,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,134,135,136,],[-30,-31,-34,-29,-32,-37,-28,-39,-53,-44,-51,-49,-55,-36,98,-39,-38,111,-33,-60,131,-54,-52,-43,-40,-41,-42,134,-50,135,136,-56,-45,-46,-48,-47,-35,-59,-58,-57,]),'(':([0,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,21,22,23,24,25,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,50,51,52,53,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,],[13,-6,-30,36,13,-7,-31,-34,-29,-32,-37,13,13,-11,13,-10,13,-28,59,-8,-5,-9,13,-27,13,13,13,13,13,13,-39,-53,-44,83,-51,89,90,-49,-55,13,-36,-39,-38,-4,13,13,-25,-26,13,-19,-69,-71,-70,-68,13,-67,-76,13,-77,13,13,13,13,13,-74,-75,-72,-73,13,13,13,-21,13,13,13,13,13,-33,-24,13,-60,13,13,-20,-14,-16,-15,-13,-12,13,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,13,-22,13,-59,-58,-57,13,-17,-5,-66,13,-18,]),'+':([4,8,9,10,11,12,22,37,39,45,48,50,51,98,101,114,115,116,117,119,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,-44,93,-36,-39,-38,-33,-60,-43,-40,-41,-42,93,-45,-46,-48,-47,-35,]),'*':([4,8,9,10,11,12,22,37,39,48,50,51,98,101,114,115,116,117,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,80,-36,-39,-38,-33,-60,-43,-40,-41,-42,80,80,80,80,-35,]),'-':([0,3,4,6,7,8,9,10,11,12,13,14,16,17,18,21,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,50,51,52,53,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,],[14,-6,-30,14,-7,-31,-34,-29,-32,-37,14,14,-11,14,-10,14,-28,-8,-5,-9,14,-27,14,14,14,14,14,14,-39,-53,-44,-51,94,-55,14,-36,-39,-38,-4,14,14,-25,-26,14,-19,-69,-71,-70,-68,14,-67,-76,14,-77,14,14,14,14,14,-74,-75,-72,-73,14,14,14,-21,14,14,14,14,14,-33,-24,14,-60,14,14,-20,-14,-16,-15,-13,-12,14,-54,-52,-43,-40,-41,-42,94,-56,-45,-46,-48,-47,-35,14,-22,14,-59,-58,-57,14,-17,-5,-66,14,-18,]),',':([4,8,9,10,11,12,22,37,38,39,41,44,45,46,48,49,50,51,56,57,58,64,65,66,67,68,69,97,98,101,104,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,135,136,140,],[-30,-31,-34,-29,-32,-37,-28,-39,-53,-44,-51,92,-49,-55,-36,92,-39,-38,103,92,-64,92,92,92,92,92,92,92,-33,-60,92,-54,-52,-43,-40,-41,-42,92,-50,92,92,-56,-45,-46,-48,-47,-35,92,103,-63,-59,-58,-57,92,]),'/':([4,8,9,10,11,12,22,37,39,48,50,51,98,101,114,115,116,117,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,81,-36,-39,-38,-33,-60,-43,-40,-41,-42,81,81,81,81,-35,]),'DIVASSIGN':([2,4,8,9,10,11,12,22,37,48,50,51,98,101,114,115,116,117,127,],[32,-30,-31,-34,-29,-32,-37,-28,71,-36,-39,-38,-33,-60,-43,-40,-41,-42,-35,]),'LT':([4,8,9,10,11,12,22,37,39,41,45,48,50,51,98,101,113,114,115,116,117,119,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,-44,86,-49,-36,-39,-38,-33,-60,86,-43,-40,-41,-42,-50,-45,-46,-48,-47,-35,]),'ADDASSIGN':([2,4,8,9,10,11,12,22,37,48,50,51,98,101,114,115,116,117,127,],[34,-30,-31,-34,-29,-32,-37,-28,73,-36,-39,-38,-33,-60,-43,-40,-41,-42,-35,]),';':([1,4,8,9,10,11,12,22,26,27,37,38,39,41,44,45,46,48,50,51,55,56,57,58,64,65,66,67,68,98,101,112,113,114,115,116,117,119,122,123,124,125,126,127,129,130,134,135,136,],[30,-30,-31,-34,-29,-32,-37,-28,60,61,-39,-53,-44,-51,91,-49,-55,-36,-39,-38,102,-62,-65,-64,106,107,108,109,110,-33,-60,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,-61,-63,-59,-58,-57,]),':':([4,8,9,10,11,12,22,37,38,39,41,45,46,48,50,51,98,101,112,113,114,115,116,117,119,122,123,124,125,126,127,128,134,135,136,],[-30,-31,-34,-29,-32,-37,-28,-39,-53,-44,-51,-49,-55,-36,-39,-38,-33,-60,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,137,-59,-58,-57,]),'=':([2,4,8,9,10,11,12,22,37,48,50,51,54,98,101,114,115,116,117,127,],[35,-30,-31,-34,-29,-32,-37,-28,75,-36,-39,-38,100,-33,-60,-43,-40,-41,-42,-35,]),'$end':([0,3,7,15,16,17,18,20,24,25,28,30,52,60,61,63,91,99,105,106,107,108,109,110,132,138,139,142,],[-3,-6,-7,0,-11,-2,-10,-1,-8,-5,-9,-27,-4,-25,-26,-19,-21,-24,-20,-14,-16,-15,-13,-12,-22,-17,-23,-18,]),'GT':([4,8,9,10,11,12,22,37,39,41,45,48,50,51,98,101,113,114,115,116,117,119,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,-44,84,-49,-36,-39,-38,-33,-60,84,-43,-40,-41,-42,-50,-45,-46,-48,-47,-35,]),'EYE':([6,13,21,31,32,33,34,35,36,47,59,83,89,90,100,102,103,137,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'STRING':([0,3,4,6,7,8,9,10,11,12,13,14,16,17,18,21,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,50,51,52,53,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,],[8,-6,-30,8,-7,-31,-34,-29,-32,-37,8,8,-11,8,-10,8,-28,-8,-5,-9,8,-27,8,8,8,8,8,8,-39,-53,-44,-51,-49,-55,8,-36,-39,-38,-4,8,8,-25,-26,8,-19,-69,-71,-70,-68,8,-67,-76,8,-77,8,8,8,8,8,-74,-75,-72,-73,8,8,8,-21,8,8,8,8,8,-33,-24,8,-60,8,8,-20,-14,-16,-15,-13,-12,8,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,8,-22,8,-59,-58,-57,8,-17,-5,-66,8,-18,]),'FOR':([0,3,4,7,8,9,10,11,12,16,17,18,22,24,25,28,29,30,37,38,39,41,45,46,48,50,51,52,53,60,61,62,63,91,98,99,101,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,138,139,140,141,142,],[19,-6,-30,-7,-31,-34,-29,-32,-37,-11,19,-10,-28,-8,-5,-9,19,-27,-39,-53,-44,-51,-49,-55,-36,-39,-38,-4,19,-25,-26,19,-19,-21,-33,-24,-60,-20,-14,-16,-15,-13,-12,19,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,19,-22,19,-59,-58,-57,-17,-5,-66,19,-18,]),'ELSE':([3,7,16,18,24,28,30,60,61,63,91,99,105,106,107,108,109,110,132,138,139,142,],[-6,-7,-11,-10,-8,-9,-27,-25,-26,-19,-21,-24,-20,-14,-16,-15,-13,-12,-22,141,-23,-18,]),'GE':([4,8,9,10,11,12,22,37,39,41,45,48,50,51,98,101,113,114,115,116,117,119,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,-44,85,-49,-36,-39,-38,-33,-60,85,-43,-40,-41,-42,-50,-45,-46,-48,-47,-35,]),'LE':([4,8,9,10,11,12,22,37,39,41,45,48,50,51,98,101,113,114,115,116,117,119,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,-44,87,-49,-36,-39,-38,-33,-60,87,-43,-40,-41,-42,-50,-45,-46,-48,-47,-35,]),'ZEROS':([6,13,21,31,32,33,34,35,36,47,59,83,89,90,100,102,103,137,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'[':([0,3,4,6,7,8,9,10,11,12,13,14,16,17,18,21,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,50,51,52,53,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,],[21,-6,-30,21,-7,-31,-34,-29,-32,47,21,21,-11,21,-10,21,-28,-8,-5,-9,21,-27,21,21,21,21,21,21,-39,-53,-44,-51,-49,-55,21,-36,-39,-38,-4,21,21,-25,-26,21,-19,-69,-71,-70,-68,21,-67,-76,21,-77,21,21,21,21,21,-74,-75,-72,-73,21,21,21,-21,21,21,21,21,21,-33,-24,21,-60,21,21,-20,-14,-16,-15,-13,-12,21,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,21,-22,21,-59,-58,-57,21,-17,-5,-66,21,-18,]),'DOTSUB':([4,8,9,10,11,12,22,37,39,45,48,50,51,98,101,114,115,116,117,119,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,-44,95,-36,-39,-38,-33,-60,-43,-40,-41,-42,95,-45,-46,-48,-47,-35,]),']':([4,8,9,10,11,12,22,37,38,39,41,45,46,48,50,51,55,56,57,58,97,98,101,112,113,114,115,116,117,119,122,123,124,125,126,127,129,130,134,135,136,],[-30,-31,-34,-29,-32,-37,-28,-39,-53,-44,-51,-49,-55,-36,-39,-38,101,-62,-65,-64,127,-33,-60,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,-61,-63,-59,-58,-57,]),'ID':([0,3,4,6,7,8,9,10,11,12,13,14,16,17,18,19,21,22,24,25,28,29,30,31,32,33,34,35,36,37,38,39,41,45,46,47,48,50,51,52,53,59,60,61,62,63,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,137,138,139,140,141,142,],[22,-6,-30,22,-7,-31,-34,-29,-32,-37,22,22,-11,22,-10,54,22,-28,-8,-5,-9,22,-27,22,22,22,22,22,22,-39,-53,-44,-51,-49,-55,22,-36,-39,-38,-4,22,22,-25,-26,22,-19,-69,-71,-70,-68,22,-67,-76,22,-77,22,22,22,22,22,-74,-75,-72,-73,22,22,22,-21,22,22,22,22,22,-33,-24,22,-60,22,22,-20,-14,-16,-15,-13,-12,22,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,22,-22,22,-59,-58,-57,22,-17,-5,-66,22,-18,]),'IF':([0,3,4,7,8,9,10,11,12,16,17,18,22,24,25,28,29,30,37,38,39,41,45,46,48,50,51,52,53,60,61,62,63,91,98,99,101,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,138,139,140,141,142,],[23,-6,-30,-7,-31,-34,-29,-32,-37,-11,23,-10,-28,-8,-5,-9,23,-27,-39,-53,-44,-51,-49,-55,-36,-39,-38,-4,23,-25,-26,23,-19,-21,-33,-24,-60,-20,-14,-16,-15,-13,-12,23,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,23,-22,23,-59,-58,-57,-17,-5,-66,23,-18,]),'EQ':([4,8,9,10,11,12,22,37,38,39,41,45,48,50,51,98,101,113,114,115,116,117,119,123,124,125,126,127,],[-30,-31,-34,-29,-32,-37,-28,-39,76,-44,-51,-49,-36,-39,-38,-33,-60,-52,-43,-40,-41,-42,-50,-45,-46,-48,-47,-35,]),'BREAK':([0,3,4,7,8,9,10,11,12,16,17,18,22,24,25,28,29,30,37,38,39,41,45,46,48,50,51,52,53,60,61,62,63,91,98,99,101,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,138,139,140,141,142,],[26,-6,-30,-7,-31,-34,-29,-32,-37,-11,26,-10,-28,-8,-5,-9,26,-27,-39,-53,-44,-51,-49,-55,-36,-39,-38,-4,26,-25,-26,26,-19,-21,-33,-24,-60,-20,-14,-16,-15,-13,-12,26,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,26,-22,26,-59,-58,-57,-17,-5,-66,26,-18,]),'CONTINUE':([0,3,4,7,8,9,10,11,12,16,17,18,22,24,25,28,29,30,37,38,39,41,45,46,48,50,51,52,53,60,61,62,63,91,98,99,101,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,138,139,140,141,142,],[27,-6,-30,-7,-31,-34,-29,-32,-37,-11,27,-10,-28,-8,-5,-9,27,-27,-39,-53,-44,-51,-49,-55,-36,-39,-38,-4,27,-25,-26,27,-19,-21,-33,-24,-60,-20,-14,-16,-15,-13,-12,27,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,27,-22,27,-59,-58,-57,-17,-5,-66,27,-18,]),'MULASSIGN':([2,4,8,9,10,11,12,22,37,48,50,51,98,101,114,115,116,117,127,],[33,-30,-31,-34,-29,-32,-37,-28,72,-36,-39,-38,-33,-60,-43,-40,-41,-42,-35,]),'{':([0,3,4,7,8,9,10,11,12,16,17,18,22,24,25,28,29,30,37,38,39,41,45,46,48,50,51,52,53,60,61,62,63,91,98,99,101,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,123,124,125,126,127,131,132,133,134,135,136,138,139,140,141,142,],[29,-6,-30,-7,-31,-34,-29,-32,-37,-11,29,-10,-28,-8,-5,-9,29,-27,-39,-53,-44,-51,-49,-55,-36,-39,-38,-4,29,-25,-26,29,-19,-21,-33,-24,-60,-20,-14,-16,-15,-13,-12,133,-54,-52,-43,-40,-41,-42,-50,-56,-45,-46,-48,-47,-35,29,-22,29,-59,-58,-57,-17,-5,-66,29,-18,]),'}':([3,7,16,18,24,25,28,29,30,52,60,61,62,63,91,99,105,106,107,108,109,110,132,133,138,139,142,],[-6,-7,-11,-10,-8,-5,-9,63,-27,-4,-25,-26,105,-19,-21,-24,-20,-14,-16,-15,-13,-12,-22,63,-17,-5,-18,]),'SINGLE_QUOTE':([4,8,9,10,11,12,22,48,98,101,127,],[-30,-31,-34,-29,-32,48,-28,-36,-33,-60,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'additive_expr':([6,13,21,31,32,33,34,35,36,47,59,74,77,83,88,89,90,92,100,102,103,137,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,119,45,45,45,45,45,45,45,]),'unary_expr':([0,6,13,14,17,21,29,31,32,33,34,35,36,47,53,59,62,74,77,79,80,81,82,83,88,89,90,92,93,94,95,96,100,102,103,111,131,133,137,141,],[2,37,37,50,2,37,2,37,37,37,37,37,37,37,2,37,2,37,50,114,115,116,117,37,50,37,37,37,50,50,50,50,37,37,37,2,2,2,37,2,]),'assignment_instruction':([0,17,29,53,62,111,131,133,141,],[3,3,3,3,3,3,3,3,3,]),'eq_op':([38,],[77,]),'conditional_instruction':([0,17,29,53,62,111,131,133,141,],[7,7,7,7,7,7,7,7,7,]),'outer':([21,],[55,]),'matrix':([0,6,13,14,17,21,29,31,32,33,34,35,36,47,53,59,62,74,77,79,80,81,82,83,88,89,90,92,93,94,95,96,100,102,103,111,131,133,137,141,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'postfix_expr':([0,6,13,14,17,21,29,31,32,33,34,35,36,47,53,59,62,74,77,79,80,81,82,83,88,89,90,92,93,94,95,96,100,102,103,111,131,133,137,141,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'equality_expr':([6,13,21,31,32,33,34,35,36,47,59,74,83,89,90,92,100,102,103,137,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'multiplicative_expr':([6,13,14,21,31,32,33,34,35,36,47,59,74,77,83,88,89,90,92,93,94,95,96,100,102,103,137,],[39,39,51,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,123,124,125,126,39,39,39,39,]),'program':([0,],[15,]),'inner':([21,102,],[56,129,]),'jump_instruction':([0,17,29,53,62,111,131,133,141,],[16,16,16,16,16,16,16,16,16,]),'iteration_instruction':([0,17,29,53,62,111,131,133,141,],[18,18,18,18,18,18,18,18,18,]),'relational_expr':([6,13,21,31,32,33,34,35,36,47,59,74,77,83,89,90,92,100,102,103,137,],[41,41,41,41,41,41,41,41,41,41,41,41,113,41,41,41,41,41,41,41,41,]),'instructions_opt':([0,],[20,]),'instructions':([0,29,133,],[17,62,62,]),'expr':([6,13,21,31,32,33,34,35,36,47,59,83,89,90,100,102,103,137,],[44,49,57,64,65,66,67,68,69,97,104,118,120,121,128,57,57,140,]),'compound_instruction':([0,17,29,53,62,111,131,133,141,],[24,24,24,24,24,24,24,24,24,]),'instruction':([0,17,29,53,62,111,131,133,141,],[25,52,25,99,52,132,138,139,142,]),'elem':([21,102,103,],[58,58,130,]),'iterator_assignment':([19,],[53,]),'primary_expr':([0,6,13,14,17,21,29,31,32,33,34,35,36,47,53,59,62,74,77,79,80,81,82,83,88,89,90,92,93,94,95,96,100,102,103,111,131,133,137,141,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'assignment_expr':([6,13,21,31,32,33,34,35,36,47,59,74,83,89,90,92,100,102,103,137,],[46,46,46,46,46,46,46,46,46,46,46,112,46,46,46,122,46,46,46,46,]),'print_instruction':([0,17,29,53,62,111,131,133,141,],[28,28,28,28,28,28,28,28,28,]),'assignment_op':([37,],[74,]),'rel_op':([41,113,],[88,88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',38),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',43),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',48),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',53),
  ('instructions -> instruction','instructions',1,'p_instructions_2','Mparser.py',58),
  ('instruction -> assignment_instruction','instruction',1,'p_instr_assignment_instruction','Mparser.py',63),
  ('instruction -> conditional_instruction','instruction',1,'p_instr_conditional_instruction','Mparser.py',68),
  ('instruction -> compound_instruction','instruction',1,'p_instr_compound_instruction','Mparser.py',73),
  ('instruction -> print_instruction','instruction',1,'p_instr_print_instruction','Mparser.py',78),
  ('instruction -> iteration_instruction','instruction',1,'p_instr_iteration_instruction','Mparser.py',83),
  ('instruction -> jump_instruction','instruction',1,'p_instr_jump_instruction','Mparser.py',88),
  ('assignment_instruction -> unary_expr = expr ;','assignment_instruction',4,'p_assignment_instruction','Mparser.py',93),
  ('assignment_instruction -> unary_expr ADDASSIGN expr ;','assignment_instruction',4,'p_assignment_instruction','Mparser.py',94),
  ('assignment_instruction -> unary_expr SUBASSIGN expr ;','assignment_instruction',4,'p_assignment_instruction','Mparser.py',95),
  ('assignment_instruction -> unary_expr MULASSIGN expr ;','assignment_instruction',4,'p_assignment_instruction','Mparser.py',96),
  ('assignment_instruction -> unary_expr DIVASSIGN expr ;','assignment_instruction',4,'p_assignment_instruction','Mparser.py',97),
  ('conditional_instruction -> IF ( expr ) instruction','conditional_instruction',5,'p_condition_instruction_1','Mparser.py',103),
  ('conditional_instruction -> IF ( expr ) instruction ELSE instruction','conditional_instruction',7,'p_condition_instruction_2','Mparser.py',108),
  ('compound_instruction -> { }','compound_instruction',2,'p_compound_instruction_1','Mparser.py',113),
  ('compound_instruction -> { instructions }','compound_instruction',3,'p_compound_instruction_2','Mparser.py',119),
  ('print_instruction -> PRINT expr ;','print_instruction',3,'p_print_instruction','Mparser.py',125),
  ('iteration_instruction -> WHILE ( expr ) instruction','iteration_instruction',5,'p_iteration_instruction_1','Mparser.py',130),
  ('iteration_instruction -> WHILE ( expr ) { instruction','iteration_instruction',6,'p_iteration_instruction_1','Mparser.py',131),
  ('iteration_instruction -> FOR iterator_assignment instruction','iteration_instruction',3,'p_iteration_instruction_3','Mparser.py',141),
  ('jump_instruction -> BREAK ;','jump_instruction',2,'p_jump_instruction','Mparser.py',146),
  ('jump_instruction -> CONTINUE ;','jump_instruction',2,'p_jump_instruction','Mparser.py',147),
  ('jump_instruction -> RETURN ;','jump_instruction',2,'p_jump_instruction_2','Mparser.py',153),
  ('primary_expr -> ID','primary_expr',1,'p_primary_expr','Mparser.py',158),
  ('primary_expr -> INTNUM','primary_expr',1,'p_primary_expr','Mparser.py',159),
  ('primary_expr -> FLOATNUM','primary_expr',1,'p_primary_expr','Mparser.py',160),
  ('primary_expr -> STRING','primary_expr',1,'p_primary_expr','Mparser.py',161),
  ('primary_expr -> matrix','primary_expr',1,'p_primary_expr','Mparser.py',162),
  ('primary_expr -> ( expr )','primary_expr',3,'p_primary_expr','Mparser.py',163),
  ('postfix_expr -> primary_expr','postfix_expr',1,'p_postfix_expr_1','Mparser.py',169),
  ('postfix_expr -> postfix_expr [ expr ]','postfix_expr',4,'p_postfix_expr_2','Mparser.py',174),
  ('postfix_expr -> postfix_expr SINGLE_QUOTE','postfix_expr',2,'p_postfix_expr_2','Mparser.py',175),
  ('unary_expr -> postfix_expr','unary_expr',1,'p_unary_expr_1','Mparser.py',181),
  ('unary_expr -> - multiplicative_expr','unary_expr',2,'p_unary_expr_2','Mparser.py',186),
  ('multiplicative_expr -> unary_expr','multiplicative_expr',1,'p_mutiplicative_expr_1','Mparser.py',191),
  ('multiplicative_expr -> multiplicative_expr * unary_expr','multiplicative_expr',3,'p_mutiplicative_expr_2','Mparser.py',196),
  ('multiplicative_expr -> multiplicative_expr / unary_expr','multiplicative_expr',3,'p_mutiplicative_expr_2','Mparser.py',197),
  ('multiplicative_expr -> multiplicative_expr DOTMUL unary_expr','multiplicative_expr',3,'p_mutiplicative_expr_2','Mparser.py',198),
  ('multiplicative_expr -> multiplicative_expr DOTDIV unary_expr','multiplicative_expr',3,'p_mutiplicative_expr_2','Mparser.py',199),
  ('additive_expr -> multiplicative_expr','additive_expr',1,'p_additive_expr_1','Mparser.py',205),
  ('additive_expr -> additive_expr + multiplicative_expr','additive_expr',3,'p_additive_expr_2','Mparser.py',210),
  ('additive_expr -> additive_expr - multiplicative_expr','additive_expr',3,'p_additive_expr_2','Mparser.py',211),
  ('additive_expr -> additive_expr DOTADD multiplicative_expr','additive_expr',3,'p_additive_expr_2','Mparser.py',212),
  ('additive_expr -> additive_expr DOTSUB multiplicative_expr','additive_expr',3,'p_additive_expr_2','Mparser.py',213),
  ('relational_expr -> additive_expr','relational_expr',1,'p_relational_expr_1','Mparser.py',219),
  ('relational_expr -> relational_expr rel_op additive_expr','relational_expr',3,'p_relational_expr_2','Mparser.py',224),
  ('equality_expr -> relational_expr','equality_expr',1,'p_equality_expr_1','Mparser.py',229),
  ('equality_expr -> equality_expr eq_op relational_expr','equality_expr',3,'p_equality_expr_2','Mparser.py',234),
  ('assignment_expr -> equality_expr','assignment_expr',1,'p_assignment_expr_1','Mparser.py',239),
  ('assignment_expr -> unary_expr assignment_op assignment_expr','assignment_expr',3,'p_assignment_expr_2','Mparser.py',244),
  ('expr -> assignment_expr','expr',1,'p_expr_1','Mparser.py',249),
  ('expr -> expr , assignment_expr','expr',3,'p_expr_2','Mparser.py',254),
  ('expr -> ZEROS ( expr )','expr',4,'p_expr_3','Mparser.py',259),
  ('expr -> ONES ( expr )','expr',4,'p_expr_3','Mparser.py',260),
  ('expr -> EYE ( expr )','expr',4,'p_expr_3','Mparser.py',261),
  ('matrix -> [ outer ]','matrix',3,'p_matrix','Mparser.py',267),
  ('outer -> outer ; inner','outer',3,'p_matrix_outer_1','Mparser.py',272),
  ('outer -> inner','outer',1,'p_matrix_outer_2','Mparser.py',277),
  ('inner -> inner , elem','inner',3,'p_matrix_inner_1','Mparser.py',282),
  ('inner -> elem','inner',1,'p_matrix_inner_2','Mparser.py',287),
  ('elem -> expr','elem',1,'p_matrix_elem','Mparser.py',292),
  ('iterator_assignment -> ID = expr : expr','iterator_assignment',5,'p_iterator_assignment','Mparser.py',297),
  ('assignment_op -> =','assignment_op',1,'p_assignment_operator','Mparser.py',302),
  ('assignment_op -> ADDASSIGN','assignment_op',1,'p_assignment_operator','Mparser.py',303),
  ('assignment_op -> SUBASSIGN','assignment_op',1,'p_assignment_operator','Mparser.py',304),
  ('assignment_op -> MULASSIGN','assignment_op',1,'p_assignment_operator','Mparser.py',305),
  ('assignment_op -> DIVASSIGN','assignment_op',1,'p_assignment_operator','Mparser.py',306),
  ('rel_op -> LT','rel_op',1,'p_relational_operator','Mparser.py',312),
  ('rel_op -> LE','rel_op',1,'p_relational_operator','Mparser.py',313),
  ('rel_op -> GT','rel_op',1,'p_relational_operator','Mparser.py',314),
  ('rel_op -> GE','rel_op',1,'p_relational_operator','Mparser.py',315),
  ('eq_op -> EQ','eq_op',1,'p_equality_operator','Mparser.py',321),
  ('eq_op -> NE','eq_op',1,'p_equality_operator','Mparser.py',322),
]
